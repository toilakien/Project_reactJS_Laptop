{"ast":null,"code":"// import { actions } from '.';\nimport products from '../products/DataProducts';\nimport { FILTER_IN_PRICE, FILTER_IN_TITLE, FIND_ASUS, FIND_DEV, FIND_LENOVO, FIND_MACBOOK, GET_DATA, BAN_CHAY, SEARCH_INPUT, ON_TO_CART, REMOVE_ITEM_ON_CART } from './constants';\nexport const initState = {\n  dataproducts: [...products],\n  category: [],\n  carts: []\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FILTER_IN_PRICE:\n      {\n        const filterProduct = state.dataproducts.filter(product => {\n          return product.price < action.payload;\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...filterProduct]\n        };\n        return state;\n      }\n\n    case FILTER_IN_TITLE:\n      {\n        const arr = state.dataproducts;\n        const arrTitle = arr.map(a => {\n          return a.title;\n        });\n        const softTit = arrTitle.soft();\n      }\n\n    case FIND_ASUS:\n      {\n        const products = state.dataproducts;\n        const findAsus = products.filter(product => {\n          return product.title.match(action.payload);\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...findAsus]\n        };\n        return state;\n      }\n\n    case FIND_LENOVO:\n      {\n        const products = state.dataproducts;\n        const findLenovo = products.filter(product => {\n          return product.title.match(action.payload);\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...findLenovo]\n        };\n        return state;\n      }\n\n    case FIND_MACBOOK:\n      {\n        const products = state.dataproducts;\n        const findMacbook = products.filter(product => {\n          return product.title.match(action.payload);\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...findMacbook]\n        };\n        return state;\n      }\n\n    case FIND_DEV:\n      {\n        const products = state.dataproducts;\n        const findDev = products.filter(product => {\n          return product.title.match(action.payload);\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...findDev]\n        };\n        return state;\n      }\n\n    case GET_DATA:\n      {\n        state = { ...state,\n          category: { ...state.dataproducts[action.payload - 1]\n          }\n        };\n        return state;\n      }\n\n    case BAN_CHAY:\n      {\n        const products = state.dataproducts;\n        const banChay = products.filter(product => {\n          return product.sold > action.payload;\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...banChay]\n        };\n        return state;\n      }\n\n    case SEARCH_INPUT:\n      {\n        const products = state.dataproducts;\n        const search = products.filter(product => {\n          return product.title.toLowerCase().match(action.payload);\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...search]\n        };\n        return state;\n      }\n\n    case ON_TO_CART:\n      {\n        const item = state.dataproducts.find(product => product.id === action.payload.id);\n\n        if (!JSON.parse(localStorage.getItem(\"carts\"))) {\n          localStorage.setItem(\"carts\", JSON.stringify([]));\n        }\n\n        const carts = JSON.parse(localStorage.getItem(\"carts\"));\n        const inCart = carts.find(item => item.id === action.payload.id ? true : false);\n        const newCarts = inCart ? carts.map(item => item.id === action.payload.id ? { ...item,\n          qty: item.qty + 1\n        } : item) : [...carts, { ...item,\n          qty: 0\n        }];\n        localStorage.setItem(\"carts\", JSON.stringify(newCarts));\n        return state;\n      }\n\n    case REMOVE_ITEM_ON_CART:\n      {// const carts=JSON.parse(localStorage.getItem('carts'));\n        // const itemNeedMove=carts.find((item)=>{\n        //     return item.id===action.payload.id\n        // })   \n        // const newCarts=carts.map(item=>{\n        //     return item!==itemNeedMove\n        // })\n        // localStorage.setItem('carts',JSON.stringify(newCarts))\n        // return state;\n      }\n\n    default:\n      throw new Error('Invalit action');\n  }\n};","map":{"version":3,"sources":["C:/Javascript-reactJS/ShopLaptop/src/store/reducer.js"],"names":["products","FILTER_IN_PRICE","FILTER_IN_TITLE","FIND_ASUS","FIND_DEV","FIND_LENOVO","FIND_MACBOOK","GET_DATA","BAN_CHAY","SEARCH_INPUT","ON_TO_CART","REMOVE_ITEM_ON_CART","initState","dataproducts","category","carts","reducer","state","action","type","filterProduct","filter","product","price","payload","arr","arrTitle","map","a","title","softTit","soft","findAsus","match","findLenovo","findMacbook","findDev","banChay","sold","search","toLowerCase","item","find","id","JSON","parse","localStorage","getItem","setItem","stringify","inCart","newCarts","qty","Error"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,0BAArB;AACA,SAAYC,eAAZ,EACYC,eADZ,EAEYC,SAFZ,EAGYC,QAHZ,EAIYC,WAJZ,EAKYC,YALZ,EAK0BC,QAL1B,EAKoCC,QALpC,EAMYC,YANZ,EAM0BC,UAN1B,EAOYC,mBAPZ,QAQW,aARX;AASA,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,YAAY,EAAE,CACV,GAAGb,QADO,CADO;AAIrBc,EAAAA,QAAQ,EAAE,EAJW;AAKrBC,EAAAA,KAAK,EAAE;AALc,CAAlB;AAOP,OAAO,MAAMC,OAAO,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBL,SAAsB;AAAA,MAAXM,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKlB,eAAL;AAAsB;AAElB,cAAMmB,aAAa,GAAGH,KAAK,CAACJ,YAAN,CAAmBQ,MAAnB,CAA2BC,OAAD,IAAa;AAEzD,iBAAOA,OAAO,CAACC,KAAR,GAAgBL,MAAM,CAACM,OAA9B;AACH,SAHqB,CAAtB;AAIAP,QAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJJ,UAAAA,YAAY,EAAE,CAAC,GAAGb,QAAJ,CAFV;AAGJc,UAAAA,QAAQ,EAAE,CAAC,GAAGM,aAAJ;AAHN,SAAR;AAKA,eAAOH,KAAP;AACH;;AACD,SAAKf,eAAL;AAAsB;AAClB,cAAMuB,GAAG,GAAGR,KAAK,CAACJ,YAAlB;AAEA,cAAMa,QAAQ,GAAGD,GAAG,CAACE,GAAJ,CAASC,CAAD,IAAO;AAC5B,iBAAOA,CAAC,CAACC,KAAT;AACH,SAFgB,CAAjB;AAGA,cAAMC,OAAO,GAAGJ,QAAQ,CAACK,IAAT,EAAhB;AACH;;AACD,SAAK5B,SAAL;AAAgB;AACZ,cAAMH,QAAQ,GAAGiB,KAAK,CAACJ,YAAvB;AACA,cAAMmB,QAAQ,GAAGhC,QAAQ,CAACqB,MAAT,CAAiBC,OAAD,IAAa;AAC1C,iBAAOA,OAAO,CAACO,KAAR,CAAcI,KAAd,CAAoBf,MAAM,CAACM,OAA3B,CAAP;AACH,SAFgB,CAAjB;AAGAP,QAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJJ,UAAAA,YAAY,EAAE,CAAC,GAAGb,QAAJ,CAFV;AAGJc,UAAAA,QAAQ,EAAE,CAAC,GAAGkB,QAAJ;AAHN,SAAR;AAKA,eAAOf,KAAP;AACH;;AACD,SAAKZ,WAAL;AAAkB;AACd,cAAML,QAAQ,GAAGiB,KAAK,CAACJ,YAAvB;AACA,cAAMqB,UAAU,GAAGlC,QAAQ,CAACqB,MAAT,CAAiBC,OAAD,IAAa;AAC5C,iBAAOA,OAAO,CAACO,KAAR,CAAcI,KAAd,CAAoBf,MAAM,CAACM,OAA3B,CAAP;AACH,SAFkB,CAAnB;AAGAP,QAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJJ,UAAAA,YAAY,EAAE,CAAC,GAAGb,QAAJ,CAFV;AAGJc,UAAAA,QAAQ,EAAE,CAAC,GAAGoB,UAAJ;AAHN,SAAR;AAKA,eAAOjB,KAAP;AACH;;AACD,SAAKX,YAAL;AAAmB;AACf,cAAMN,QAAQ,GAAGiB,KAAK,CAACJ,YAAvB;AACA,cAAMsB,WAAW,GAAGnC,QAAQ,CAACqB,MAAT,CAAiBC,OAAD,IAAa;AAC7C,iBAAOA,OAAO,CAACO,KAAR,CAAcI,KAAd,CAAoBf,MAAM,CAACM,OAA3B,CAAP;AACH,SAFmB,CAApB;AAGAP,QAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJJ,UAAAA,YAAY,EAAE,CAAC,GAAGb,QAAJ,CAFV;AAGJc,UAAAA,QAAQ,EAAE,CAAC,GAAGqB,WAAJ;AAHN,SAAR;AAMA,eAAOlB,KAAP;AACH;;AACD,SAAKb,QAAL;AAAe;AACX,cAAMJ,QAAQ,GAAGiB,KAAK,CAACJ,YAAvB;AACA,cAAMuB,OAAO,GAAGpC,QAAQ,CAACqB,MAAT,CAAiBC,OAAD,IAAa;AACzC,iBAAOA,OAAO,CAACO,KAAR,CAAcI,KAAd,CAAoBf,MAAM,CAACM,OAA3B,CAAP;AACH,SAFe,CAAhB;AAGAP,QAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJJ,UAAAA,YAAY,EAAE,CAAC,GAAGb,QAAJ,CAFV;AAGJc,UAAAA,QAAQ,EAAE,CAAC,GAAGsB,OAAJ;AAHN,SAAR;AAKA,eAAOnB,KAAP;AACH;;AACD,SAAKV,QAAL;AAAe;AACXU,QAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJH,UAAAA,QAAQ,EAAE,EAAE,GAAGG,KAAK,CAACJ,YAAN,CAAmBK,MAAM,CAACM,OAAP,GAAiB,CAApC;AAAL;AAFN,SAAR;AAIA,eAAOP,KAAP;AACH;;AACD,SAAKT,QAAL;AAAe;AACX,cAAMR,QAAQ,GAAGiB,KAAK,CAACJ,YAAvB;AACA,cAAMwB,OAAO,GAAGrC,QAAQ,CAACqB,MAAT,CAAiBC,OAAD,IAAa;AACzC,iBAAOA,OAAO,CAACgB,IAAR,GAAepB,MAAM,CAACM,OAA7B;AACH,SAFe,CAAhB;AAGAP,QAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJJ,UAAAA,YAAY,EAAE,CAAC,GAAGb,QAAJ,CAFV;AAGJc,UAAAA,QAAQ,EAAE,CAAC,GAAGuB,OAAJ;AAHN,SAAR;AAKA,eAAOpB,KAAP;AACH;;AACD,SAAKR,YAAL;AAAmB;AACf,cAAMT,QAAQ,GAAGiB,KAAK,CAACJ,YAAvB;AACA,cAAM0B,MAAM,GAAGvC,QAAQ,CAACqB,MAAT,CAAiBC,OAAD,IAAa;AACxC,iBAAOA,OAAO,CAACO,KAAR,CAAcW,WAAd,GAA4BP,KAA5B,CAAkCf,MAAM,CAACM,OAAzC,CAAP;AACH,SAFc,CAAf;AAGAP,QAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJJ,UAAAA,YAAY,EAAE,CAAC,GAAGb,QAAJ,CAFV;AAGJc,UAAAA,QAAQ,EAAE,CAAC,GAAGyB,MAAJ;AAHN,SAAR;AAKA,eAAOtB,KAAP;AACH;;AACD,SAAKP,UAAL;AAAiB;AAEb,cAAM+B,IAAI,GAAGxB,KAAK,CAACJ,YAAN,CAAmB6B,IAAnB,CACRpB,OAAD,IAAaA,OAAO,CAACqB,EAAR,KAAezB,MAAM,CAACM,OAAP,CAAemB,EADlC,CAAb;;AAIA,YAAG,CAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAJ,EAA8C;AAC1CD,UAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA6BJ,IAAI,CAACK,SAAL,CAAe,EAAf,CAA7B;AACH;;AACD,cAAMlC,KAAK,GAAG6B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd;AACA,cAAMG,MAAM,GAAGnC,KAAK,CAAC2B,IAAN,CAAYD,IAAD,IACtBA,IAAI,CAACE,EAAL,KAAYzB,MAAM,CAACM,OAAP,CAAemB,EAA3B,GAA8B,IAA9B,GAAmC,KADxB,CAAf;AAGA,cAAMQ,QAAQ,GAAGD,MAAM,GACrBnC,KAAK,CAACY,GAAN,CAAWc,IAAD,IACRA,IAAI,CAACE,EAAL,KAAYzB,MAAM,CAACM,OAAP,CAAemB,EAA3B,GACM,EAAE,GAAGF,IAAL;AAAWW,UAAAA,GAAG,EAAEX,IAAI,CAACW,GAAL,GAAW;AAA3B,SADN,GAEMX,IAHR,CADqB,GAMrB,CAAC,GAAG1B,KAAJ,EAAW,EAAE,GAAG0B,IAAL;AAAWW,UAAAA,GAAG,EAAE;AAAhB,SAAX,CANF;AAOAN,QAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA6BJ,IAAI,CAACK,SAAL,CAAeE,QAAf,CAA7B;AACA,eAAOlC,KAAP;AACH;;AACD,SAAKN,mBAAL;AAAyB,OACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACD;AACI,YAAM,IAAI0C,KAAJ,CAAU,gBAAV,CAAN;AA1IR;AA4IH,CA7IM","sourcesContent":["// import { actions } from '.';\nimport products from '../products/DataProducts';\nimport {    FILTER_IN_PRICE,\n            FILTER_IN_TITLE, \n            FIND_ASUS, \n            FIND_DEV, \n            FIND_LENOVO, \n            FIND_MACBOOK, GET_DATA, BAN_CHAY, \n            SEARCH_INPUT, ON_TO_CART, \n            REMOVE_ITEM_ON_CART \n    } from './constants';\nexport const initState = {\n    dataproducts: [\n        ...products\n    ],\n    category: [],\n    carts: []\n}\nexport const reducer = (state = initState, action) => {\n    switch (action.type) {\n\n        case FILTER_IN_PRICE: {\n\n            const filterProduct = state.dataproducts.filter((product) => {\n\n                return product.price < action.payload\n            })\n            state = {\n                ...state,\n                dataproducts: [...products],\n                category: [...filterProduct]\n            }\n            return state\n        }\n        case FILTER_IN_TITLE: {\n            const arr = state.dataproducts\n\n            const arrTitle = arr.map((a) => {\n                return a.title;\n            })\n            const softTit = arrTitle.soft();\n        }\n        case FIND_ASUS: {\n            const products = state.dataproducts;\n            const findAsus = products.filter((product) => {\n                return product.title.match(action.payload);\n            })\n            state = {\n                ...state,\n                dataproducts: [...products],\n                category: [...findAsus]\n            }\n            return state\n        }\n        case FIND_LENOVO: {\n            const products = state.dataproducts;\n            const findLenovo = products.filter((product) => {\n                return product.title.match(action.payload);\n            })\n            state = {\n                ...state,\n                dataproducts: [...products],\n                category: [...findLenovo]\n            }\n            return state\n        }\n        case FIND_MACBOOK: {\n            const products = state.dataproducts;\n            const findMacbook = products.filter((product) => {\n                return product.title.match(action.payload);\n            })\n            state = {\n                ...state,\n                dataproducts: [...products],\n                category: [...findMacbook],\n\n            }\n            return state\n        }\n        case FIND_DEV: {\n            const products = state.dataproducts;\n            const findDev = products.filter((product) => {\n                return product.title.match(action.payload);\n            })\n            state = {\n                ...state,\n                dataproducts: [...products],\n                category: [...findDev]\n            }\n            return state\n        }\n        case GET_DATA: {\n            state = {\n                ...state,\n                category: { ...state.dataproducts[action.payload - 1] }\n            }\n            return state\n        }\n        case BAN_CHAY: {\n            const products = state.dataproducts;\n            const banChay = products.filter((product) => {\n                return product.sold > action.payload;\n            })\n            state = {\n                ...state,\n                dataproducts: [...products],\n                category: [...banChay]\n            }\n            return state\n        }\n        case SEARCH_INPUT: {\n            const products = state.dataproducts;\n            const search = products.filter((product) => {\n                return product.title.toLowerCase().match(action.payload);\n            })\n            state = {\n                ...state,\n                dataproducts: [...products],\n                category: [...search]\n            }\n            return state;\n        }\n        case ON_TO_CART: {\n\n            const item = state.dataproducts.find(\n                (product) => product.id === action.payload.id\n            );\n            \n            if(!JSON.parse(localStorage.getItem(\"carts\"))){\n                localStorage.setItem(\"carts\",JSON.stringify([]))\n            }\n            const carts = JSON.parse(localStorage.getItem(\"carts\"))\n            const inCart = carts.find((item) =>\n                item.id === action.payload.id?true:false\n            );\n            const newCarts = inCart\n            ? carts.map((item) =>\n                item.id === action.payload.id\n                    ? { ...item, qty: item.qty + 1 }\n                    : item\n            )\n            : [...carts, { ...item, qty: 0 }]\n            localStorage.setItem(\"carts\",JSON.stringify(newCarts))\n            return state;\n        }\n        case REMOVE_ITEM_ON_CART:{\n            // const carts=JSON.parse(localStorage.getItem('carts'));\n            // const itemNeedMove=carts.find((item)=>{\n            //     return item.id===action.payload.id\n            // })   \n            // const newCarts=carts.map(item=>{\n            //     return item!==itemNeedMove\n            // })\n            // localStorage.setItem('carts',JSON.stringify(newCarts))\n            // return state;\n        }\n        default:\n            throw new Error('Invalit action')\n    }\n}   \n"]},"metadata":{},"sourceType":"module"}