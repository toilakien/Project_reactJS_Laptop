{"ast":null,"code":"import products from '../../products/DataProducts';\nimport { FILTER_IN_PRICE, FILTER_IN_TITLE, FIND_ASUS, FIND_DEV, FIND_LENOVO, FIND_MACBOOK, GET_DATA, BAN_CHAY, SEARCH_INPUT, ON_TO_CART, REMOVE_ITEM_ON_CART } from '../constants/constants';\nexport const initState = {\n  dataproducts: [...products],\n  category: [],\n  carts: []\n};\nexport const productReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FILTER_IN_PRICE:\n      {\n        const filterProduct = state.dataproducts.filter(product => {\n          return product.price < action.payload;\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...filterProduct]\n        };\n        return state;\n      }\n\n    case FILTER_IN_TITLE:\n      {\n        const arr = state.dataproducts;\n        const arrTitle = arr.map(a => {\n          return a.title;\n        });\n        const softTit = arrTitle.soft();\n      }\n\n    case FIND_ASUS:\n      {\n        const products = state.dataproducts;\n        const findAsus = products.filter(product => {\n          return product.title.match(action.payload);\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...findAsus]\n        };\n        return state;\n      }\n\n    case FIND_LENOVO:\n      {\n        const products = state.dataproducts;\n        const findLenovo = products.filter(product => {\n          return product.title.match(action.payload);\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...findLenovo]\n        };\n        return state;\n      }\n\n    case FIND_MACBOOK:\n      {\n        const products = state.dataproducts;\n        const findMacbook = products.filter(product => {\n          return product.title.match(action.payload);\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...findMacbook]\n        };\n        return state;\n      }\n\n    case FIND_DEV:\n      {\n        const products = state.dataproducts;\n        const findDev = products.filter(product => {\n          return product.title.match(action.payload);\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...findDev]\n        };\n        return state;\n      }\n\n    case GET_DATA:\n      {\n        state = { ...state,\n          category: { ...state.dataproducts[action.payload - 1]\n          }\n        };\n        return state;\n      }\n\n    case BAN_CHAY:\n      {\n        const products = state.dataproducts;\n        const banChay = products.filter(product => {\n          return product.sold > action.payload;\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...banChay]\n        };\n        return state;\n      }\n\n    case SEARCH_INPUT:\n      {\n        const products = state.dataproducts;\n        const search = products.filter(product => {\n          return product.title.toLowerCase().match(action.payload);\n        });\n        state = { ...state,\n          dataproducts: [...products],\n          category: [...search]\n        };\n        return state;\n      }\n    // case ON_TO_CART: {\n    //     const item = state.dataproducts.find(\n    //         (product) => product.id === action.payload.id\n    //     );\n    //     if(!JSON.parse(localStorage.getItem(\"carts\"))){\n    //         localStorage.setItem(\"carts\",JSON.stringify([]))\n    //     }\n    //     // const carts = state.carts;\n    //     const carts = JSON.parse(localStorage.getItem(\"carts\"))\n    //     const inCart = carts.find((item) =>\n    //         item.id === action.payload.id?true:false\n    //     );\n    //     const newCarts = inCart\n    //     ? carts.map((item) =>\n    //         item.id === action.payload.id\n    //             ? { ...item, qty: item.qty + 1 }\n    //             : item\n    //     )\n    //     : [...carts, { ...item, qty: 0 }]\n    //     localStorage.setItem(\"carts\",JSON.stringify(newCarts))\n    //     return newCarts;\n    // }\n    // case REMOVE_ITEM_ON_CART:{\n    //     const carts=JSON.parse(localStorage.getItem('carts'));\n    //     const inCart = carts.find((item) =>\n    //         item.id === action.payload.id?true:false\n    //     );\n    //     // localStorage.removeItem(\"cart\");\n    //     const newCarts=carts.filter((i)=>i.id!==action.payload.id);\n    //     inCart?localStorage.setItem(\"carts\",JSON.stringify(newCarts)):carts\n    //     return newCarts;\n    // }   \n\n    case ON_TO_CART:\n      const item = state.products.find(product => product.id === action.payload.id);\n      const inCart = state.cart.find(item => item.id === action.payload.id ? true : false);\n      return { ...state,\n        cart: inCart ? state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: item.qty + 1\n        } : item) : [...state.cart, { ...item,\n          qty: 1\n        }]\n      };\n\n    case REMOVE_ITEM_ON_CART:\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Javascript-reactJS/ShopLaptop/src/redux/reducers/productsReducers.js"],"names":["products","FILTER_IN_PRICE","FILTER_IN_TITLE","FIND_ASUS","FIND_DEV","FIND_LENOVO","FIND_MACBOOK","GET_DATA","BAN_CHAY","SEARCH_INPUT","ON_TO_CART","REMOVE_ITEM_ON_CART","initState","dataproducts","category","carts","productReducer","state","action","type","filterProduct","filter","product","price","payload","arr","arrTitle","map","a","title","softTit","soft","findAsus","match","findLenovo","findMacbook","findDev","banChay","sold","search","toLowerCase","item","find","id","inCart","cart","qty"],"mappings":"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","sourcesContent":["import products from '../../products/DataProducts';\r\nimport {    FILTER_IN_PRICE,\r\n            FILTER_IN_TITLE, \r\n            FIND_ASUS, \r\n            FIND_DEV, \r\n            FIND_LENOVO, \r\n            FIND_MACBOOK, GET_DATA, BAN_CHAY, \r\n            SEARCH_INPUT, ON_TO_CART, \r\n            REMOVE_ITEM_ON_CART \r\n    } from '../constants/constants';\r\nexport const initState = {\r\n    dataproducts: [\r\n        ...products\r\n    ],\r\n    category: [],\r\n    carts: []\r\n}\r\nexport const productReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FILTER_IN_PRICE: {\r\n\r\n            const filterProduct = state.dataproducts.filter((product) => {\r\n\r\n                return product.price < action.payload\r\n            })\r\n            state = {\r\n                ...state,\r\n                dataproducts: [...products],\r\n                category: [...filterProduct]\r\n            }\r\n            return state\r\n        }\r\n        case FILTER_IN_TITLE: {\r\n            const arr = state.dataproducts\r\n\r\n            const arrTitle = arr.map((a) => {\r\n                return a.title;\r\n            })\r\n            const softTit = arrTitle.soft();\r\n        }\r\n        case FIND_ASUS: {\r\n            const products = state.dataproducts;\r\n            const findAsus = products.filter((product) => {\r\n                return product.title.match(action.payload);\r\n            })\r\n            state = {\r\n                ...state,\r\n                dataproducts: [...products],\r\n                category: [...findAsus]\r\n            }\r\n            return state\r\n        }\r\n        case FIND_LENOVO: {\r\n            const products = state.dataproducts;\r\n            const findLenovo = products.filter((product) => {\r\n                return product.title.match(action.payload);\r\n            })\r\n            state = {\r\n                ...state,\r\n                dataproducts: [...products],\r\n                category: [...findLenovo]\r\n            }\r\n            return state\r\n        }\r\n        case FIND_MACBOOK: {\r\n            const products = state.dataproducts;\r\n            const findMacbook = products.filter((product) => {\r\n                return product.title.match(action.payload);\r\n            })\r\n            state = {\r\n                ...state,\r\n                dataproducts: [...products],\r\n                category: [...findMacbook],\r\n\r\n            }\r\n            return state\r\n        }\r\n        case FIND_DEV: {\r\n            const products = state.dataproducts;\r\n            const findDev = products.filter((product) => {\r\n                return product.title.match(action.payload);\r\n            })\r\n            state = {\r\n                ...state,\r\n                dataproducts: [...products],\r\n                category: [...findDev]\r\n            }\r\n            return state\r\n        }\r\n        case GET_DATA: {\r\n            state = {\r\n                ...state,\r\n                category: { ...state.dataproducts[action.payload - 1] }\r\n            }\r\n            return state;\r\n        }\r\n        case BAN_CHAY: {\r\n            const products = state.dataproducts;\r\n            const banChay = products.filter((product) => {\r\n                return product.sold > action.payload;\r\n            })\r\n            state = {\r\n                ...state,\r\n                dataproducts: [...products],\r\n                category: [...banChay]\r\n            }\r\n            return state\r\n        }\r\n        case SEARCH_INPUT: {\r\n            const products = state.dataproducts;\r\n            const search = products.filter((product) => {\r\n                return product.title.toLowerCase().match(action.payload);\r\n            })\r\n            state = {\r\n                ...state,\r\n                dataproducts: [...products],\r\n                category: [...search]\r\n            }\r\n            return state;\r\n        }\r\n        // case ON_TO_CART: {\r\n\r\n        //     const item = state.dataproducts.find(\r\n        //         (product) => product.id === action.payload.id\r\n        //     );\r\n            \r\n        //     if(!JSON.parse(localStorage.getItem(\"carts\"))){\r\n        //         localStorage.setItem(\"carts\",JSON.stringify([]))\r\n        //     }\r\n        //     // const carts = state.carts;\r\n        //     const carts = JSON.parse(localStorage.getItem(\"carts\"))\r\n        //     const inCart = carts.find((item) =>\r\n        //         item.id === action.payload.id?true:false\r\n        //     );\r\n        //     const newCarts = inCart\r\n        //     ? carts.map((item) =>\r\n        //         item.id === action.payload.id\r\n        //             ? { ...item, qty: item.qty + 1 }\r\n        //             : item\r\n        //     )\r\n        //     : [...carts, { ...item, qty: 0 }]\r\n        //     localStorage.setItem(\"carts\",JSON.stringify(newCarts))\r\n        //     return newCarts;\r\n        // }\r\n        // case REMOVE_ITEM_ON_CART:{\r\n        //     const carts=JSON.parse(localStorage.getItem('carts'));\r\n            \r\n        //     const inCart = carts.find((item) =>\r\n        //         item.id === action.payload.id?true:false\r\n        //     );\r\n        //     // localStorage.removeItem(\"cart\");\r\n        //     const newCarts=carts.filter((i)=>i.id!==action.payload.id);\r\n        //     inCart?localStorage.setItem(\"carts\",JSON.stringify(newCarts)):carts\r\n        //     return newCarts;\r\n        // }   \r\n        case ON_TO_CART:\r\n            const item = state.products.find(\r\n              (product) => product.id === action.payload.id\r\n            );\r\n            const inCart = state.cart.find((item) =>\r\n              item.id === action.payload.id ? true : false\r\n            );\r\n      \r\n            return {\r\n              ...state,\r\n              cart: inCart\r\n                ? state.cart.map((item) =>\r\n                    item.id === action.payload.id\r\n                      ? { ...item, qty: item.qty + 1 }\r\n                      : item\r\n                  )\r\n                : [...state.cart, { ...item, qty: 1 }],\r\n            };\r\n          case REMOVE_ITEM_ON_CART:\r\n            return {\r\n              ...state,\r\n              cart: state.cart.filter((item) => item.id !== action.payload.id),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}   \r\n"]},"metadata":{},"sourceType":"module"}